name: CI e Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    name: Build com Maven
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven
      - name: Build com Maven
        run: mvn -B package --file pom.xml
      # Descomente para subir o grafo de dependências ao GitHub
      # - name: Update dependency graph
      #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  delivery:
    name: Delivery (dry run)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
      - name: Build and test with Maven
        run: mvn clean install
      - name: Check deploy step (dry run)
        run: echo "Simulando deploy (dry run). Nenhum deploy será feito."

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven
      - name: Build JAR
        run: mvn -B package --file pom.xml
      - name: Build Docker image
        run: docker build -t devops-app:latest .
      # Opcional: rodar o container para testar
      # - name: Run Docker container
      #   run: docker run --rm -p 8080:8080 devops-app:latest
  discord:
    runs-on: ubuntu-latest
    needs: [build, delivery, docker]
    steps:
      - uses: actions/checkout@v4
      - name: Discord notification
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          args: "[PULL REQUEST] - PR Validada com sucesso"